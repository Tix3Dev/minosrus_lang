- Predefined names are keywords of minosrus lang
- Every line starts with a predefined name
- There are predefined names, such as ONTO, that can't be at the beginning of a line

List (of those that are at the beginning):
- LET
	- Used to give a variable a value
	- All variables are global
	
	- Example:
		> LET A = 123

- PRINT
	- Used to print a value
	- Can only print strings and integers

	- Example:
		> PRINT "HELLO WORLD"

- FN
	- Used to create a function
	- Functions don't have parameters/return values because all variables are global

	- Example:
		> FN MAIN START
			> PRINT "HELLO FROM FUNCTION"
			> END

- DO
	- Used to execute a function
	- No parameters can be passed

	- Example (see "FN" example):
		> DO MAIN

- IF
	- Used for control flow
	- Compares left to right
	
	- Example:
		> IF 12 < 122 START
			> PRINT "HELLO"
			> END

- ELSE
	- Used for control flow
	- Works only with IF

	- Example:
		> IF 12 > 122 START
			> PRINT "HELLO"
			> ELSE
			> PRINT "OH NOOO"
			> END

- WHILE
	- Used for control flow
	- Executes code block as long as the condition is true

	- Example:
		> LET COUNTER = 1
		> WHILE COUNTER <= 10 START
			> PRINT COUNTER
			> LET COUNTER = | COUNTER + 1 |
			> END

- PUSH
	- Used to put either strings or integers on an array
	- Puts string/integer at the end of the array
	
	- Example:
		> LET A = ["TOM", "WILLY", "JERRY", "RUSTY"]
		> PUSH "RICK" ONTO A

- POP
	- Used to remove the last element of an array
	- If array is empty, nothing happens

	- Example:
		> LET A = ["TOM", "WILLY", "JERRY", "RUSTY"]
		> POP FROM A

- INSERT
	- Used to put either strings or integers on an array
	- Puts string/integer at position X

	- Example:
		> LET A = ["TOM", "WILLY", "JERRY", "RUSTY"]
		> INSERT "RICK" INTO A AT 1

- REMOVE
	- Used to remove a string or an integer from an array
	- It removes it at position X

	- Example:
		> LET A = ["TOM", "WILLY", "JERRY", "RUSTY"]
		> REMOVE FROM A AT 1

(
	RESET -> reset environment (everything that is saved gets deleted)
	STOP -> stop interpreter
)

List (of those that are in verines):
- GET
	- Used to get something; either case 1(length of a string/array) or case 2(character/element)
	- case 1: GET FROM A LEN
	- case 2: GET FROM A AT 0

	- Example:
		> LET A = "HELLO"
		> LET LEN_OF_STRING = | GET FROM A LEN |
		> LET B = [12, 34, 56, 78]
		> LET FIRST_ELEMENT = | GET FROM B AT 0 |

- READLN
	- Used to get user input
	- Always used with STRING_FROM OR INTEGER_FROM

	- Example:
		> LET USER_INPUT = | STRING_FROM READLN |

- STRING_FROM
	- Used to convert a integer to a string
	- Throws an EXECUTION ERROR if the given type isn't a integer

	- Example:
		> LET A = 123
		> LET A_AS_STRING = | STRING_FROM A |

- INTEGER_FROM
	- Used to convert a string (which consists of digits) to a integer
	- Throws an EXECUTION ERROR if the given type isn't a string or can't be converted (because it includes invalid characters)

	- Example:
		> LET A = "123"
		> LET A_AS_INTEGER = | INTEGER_FROM A |
